{"version":3,"sources":["webpack:///buffer (ignored)?a1d8","webpack:///util (ignored)?e31b","./src/app/my-wallet/my-wallet.component.ts","./src/app/my-wallet/my-wallet.component.html","webpack:///util (ignored)?f885","buffer (ignored)","crypto (ignored)","util (ignored)","webpack:///util (ignored)?2aaa","webpack:///buffer (ignored)?764d","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/helpers/utils.ts","./src/app/helpers/bignumber.ts","./src/app/layouts/header/header.component.ts","./src/app/layouts/header/header.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/helpers/chains.ts","./src/app/app.module.ts","./src/assets/bignumber.js/bignumber.js","./src/app/layouts/footer/footer.component.ts","./src/app/layouts/footer/footer.component.html","./src/app/helpers/api.ts","./src/app/app-routing.module.ts","./src/app/api-wallet-connect.service.ts","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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CA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;;;AAGd;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAwD;AACzF;;;AAGA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,SAAS;;AAEvC;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,OAAO;;AAEP,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,uFAAuF,EAAE;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;;AAE3C;AACA,4BAA4B,8BAA8B;;AAE1D;AACA;;AAEA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA,gBAAgB,KAAK;AACrB;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,2BAA2B,gBAAgB;AAC3C,2BAA2B,gBAAgB;AAC3C,2BAA2B,QAAQ;AACnC,2BAA2B,OAAO;AAClC,8BAA8B,OAAO;AACrC,2BAA2B,OAAO;AAClC;AACA,2BAA2B,OAAO;AAClC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,6BAA6B,OAAO;AACpC,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA,uCAAuC,kEAAkE,GAAG,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,0BAA0B,OAAO;AACjC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,mDAAmD,EAAE;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,SAAS;;AAET,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,GAAG;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2CAA2C;AACjE,sBAAsB;AACtB,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;;AAEA,kBAAkB,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,YAAY;;AAE1B;AACA;AACA;AACA,SAAS;;AAET;AACA,uBAAuB,YAAY;;AAEnC;AACA,+BAA+B,SAAS;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB,iCAAiC,QAAQ;;AAEzC;;AAEA,qBAAqB,gBAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,cAAc;;AAE5B;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,UAAU;;AAEvC;AACA,+BAA+B,QAAQ;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,2BAA2B,QAAQ;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;;AAE1C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC,SAAS;;AAEzC;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,yCAAyC,KAAK;AAC9C,WAAW;AACX;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;;AAErB;AACA,oBAAoB,SAAS;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,EAAE;AACjD,4CAA4C,EAAE,UAAU,EAAE;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,SAAS;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA;AACA,yBAAyB,SAAS;;AAElC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,EAAE;;AAEpB;AACA;;AAEA;AACA,sCAAsC,SAAS;AAC/C;AACA,2BAA2B,SAAS;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,eAAe;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,aAAa;AACvC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC,YAAY,wBAAwB;AACpC;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,EAAE;;AAEd;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,GAAG;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,KAAK;AACxB;AACA,OAAO;;AAEP;AACA;;AAEA,uBAAuB,OAAO;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,KAAK;AAC5B;;AAEA;AACA,YAAY,OAAO;;AAEnB;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,YAAY;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,KAAK;;AAEvC;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,cAAc,KAAK;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,GAAG;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,cAAc,aAAa;;AAE3B;AACA,sBAAsB,SAAS;AAC/B;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,EAAE;AAChB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb,gDAAgD,IAAI,OAAO,IAAI;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,iBAAiB,OAAO;AACxB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA,oCAAoC,4BAA4B,IAAI,GAAG;AACvE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,gCAAgC,mDAAmD,GAAG,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,OAAO;AACjB;AACA;AACA,YAAY,KAAK;AACjB;AACA;;AAEA;AACA,sBAAsB,0BAA0B;;AAEhD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,OAAO;;AAEtB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,KAAK;AAC7B;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;AACA,MAAM,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","file":"main-es2015.js","sourcesContent":["/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from '../api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiWalletConnectService } from '../api-wallet-connect.service';\n\ndeclare const $: any;\n\n\n@Component({\n  selector: 'app-my-wallet',\n  templateUrl: './my-wallet.component.html',\n  styleUrls: ['./my-wallet.component.css']\n})\nexport class MyWalletComponent implements OnInit {\n\n  show: any = 'step1';\n\n  contractInstance1: any;\n  contractInstance2: any;\n  userAccount: any;\n\n  balance1: any = 0;\n  balance2: any = 0;\n  holdedBalance: any = 0;\n\n  uniqueAddress: any;\n\n  wallet: any = '';\n  id: any;\n  chainId: any;\n  constructor(private router: Router,\n    private _route: ActivatedRoute,\n    private apiWalletService: ApiWalletConnectService,\n    private apiService: ApiService,\n    private toaster: ToastrService,) {\n    this.id = this._route.snapshot.params['id'];\n    if (this.id && this.id != undefined) {\n      let idArray = ['1', '2'];\n\n      if (!idArray.includes(this.id)) {\n        this.router.navigate(['/']);\n      } else {\n        if (this.id == 1) {\n          this.wallet = 'Metamask';\n          this.userAccount = this.apiService.export();\n\n          if (this.userAccount != undefined && this.userAccount || (this.userAccount.length)) {\n\n          } else {\n            this.router.navigate(['/']);\n          }\n        }\n        else {\n          this.wallet = 'WalletConnect';\n        }\n      }\n    }\n  }\n\n  async ngOnInit() {\n\n    if (this.wallet == 'Metamask') {\n      this.userAccount = await this.apiService.export();\n\n      this.contractInstance1 = await this.apiService.exportInstance1();\n      this.contractInstance2 = await this.apiService.exportInstance2();\n      console.log(this.userAccount)\n      if (this.userAccount) {\n\n        await this.balanceOf1(this.userAccount, this.contractInstance1);\n        await this.balanceOf2(this.userAccount, this.contractInstance2);\n        await this.checkProcess(this.userAccount, this.contractInstance1, this.contractInstance2)\n      }\n    } else {\n      this.apiWalletService.getBehaviorView().subscribe(async (data) => {\n        if (data && data != undefined) {\n          if (data['connected']) {\n\n            this.userAccount = data['walletAddress']\n            this.chainId = data['chainId'];\n            this.contractInstance1 = await this.apiWalletService.exportInstance1(data['networkName']);\n            this.contractInstance2 = await this.apiWalletService.exportInstance2(data['networkName']);\n\n            this.apiWalletService.walletConnectInit();\n            this.balanceOfWallet1(this.contractInstance1, data['walletAddress']);\n            this.balanceOfWallet2(this.contractInstance2, data['walletAddress']);\n            this.checkProcessWallet(this.userAccount, this.contractInstance1, this.contractInstance2)\n          } else {\n            this.router.navigate(['/']);\n          }\n        }\n      })\n    }\n  }\n\n  async balanceOf1(walletAddress, contractInstance) {\n    await this.apiService.getBalance1(walletAddress, contractInstance).then((data: any) => {\n      if (data) {\n        console.log('11', data);\n        this.balance1 = (data).toFixed(2);\n      }\n    })\n  }\n\n  async balanceOf2(walletAddress, contractInstance) {\n    await this.apiService.getBalance2(walletAddress, contractInstance).then((data: any) => {\n\n      if (data) {\n        this.balance2 = (data).toFixed(2);\n        // Math.round(data * 100) / 100\n      }\n    })\n  }\n\n  //for start=------------ walletConnect\n  balanceOfWallet1(contractInstance, walletAddress) {\n    this.apiWalletService.getBalance1(contractInstance, walletAddress).then((data) => {\n      if (data) {\n        this.balance1 = (data).toFixed(2);\n      }\n    })\n  }\n  balanceOfWallet2(contractInstance, walletAddress) {\n    this.apiWalletService.getBalance2(contractInstance, walletAddress).then((data) => {\n      if (data) {\n        this.balance2 = (data).toFixed(2);\n      }\n    })\n  }\n\n  async checkProcessWallet(walletAddress, contractInstance1, contractInstance2) {\n    this.getWalletTokenUpgrader(walletAddress, contractInstance2)\n  }\n\n  async getWalletTokenUpgrader(walletAddress, contractInstance2) {\n\n    await this.apiWalletService.tokenUpgrader(walletAddress, contractInstance2).then(async (data) => {\n      console.log('--------------da', data)\n      if (data && data == '0x0000000000000000000000000000000000000000') {\n        this.show = 'step1';\n        // Math.round(data * 100) / 100\n      } else if (data) {\n        this.uniqueAddress = data;\n\n        await this.apiWalletService.getBalance1(this.contractInstance1, this.uniqueAddress).then(async (data1) => {\n          if (data1 && data1 > 0) {\n\n            await this.apiWalletService.getBalance2(this.contractInstance2, this.userAccount).then((data2) => {\n              if (data2 && data2 > 0) {\n              } else {\n                this.show = 'step3';\n                // this.show = 'step2'\n              }\n\n            })\n\n          } else {\n            this.show = 'step2'\n          }\n\n        });\n      }\n\n    })\n\n  }\n\n\n  //end----------- walletConnect\n\n  async checkProcess(walletAddress, contractInstance1, contractInstance2) {\n\n    await this.getTokenUpgrader(walletAddress, contractInstance2);\n  }\n\n  async getTokenUpgrader(walletAddress, contractInstance2) {\n    await this.apiService.tokenUpgrader(walletAddress, contractInstance2).then(async (data) => {\n      if (data && data == '0x0000000000000000000000000000000000000000') {\n        this.show = 'step1';\n        // Math.round(data * 100) / 100\n      } else if (data) {\n        this.uniqueAddress = data;\n\n        await this.apiService.getBalance1(this.uniqueAddress, this.contractInstance1).then(async (data1) => {\n          if (data1 && data1 > 0) {\n\n            await this.apiService.getBalance2(this.userAccount, this.contractInstance2).then((data2) => {\n              if (data2 && data2 > 0) {\n              } else {\n                this.show = 'step3';\n                // this.show = 'step2'\n              }\n\n            })\n\n          } else {\n            this.show = 'step2'\n          }\n\n        })\n      }\n\n    })\n  }\n\n\n\n  async getHoldedBalance(uniqueAddress, contractInstance1) {\n    await this.apiService.getBalance1(uniqueAddress, contractInstance1).then((data) => {\n      if (data && data > 0) {\n        this.show = 'step3';\n      }\n\n    })\n  }\n\n\n  //click event  1\n  async createUpgrader() {\n\n    if (this.id && this.id == '1') {\n      await this.apiService.createUpgrader(this.contractInstance2, this.userAccount).then((data) => {\n\n        if (data) {\n          this.uniqueAddress = data;\n          this.show = 'step2';\n        }\n\n      })\n    } else {\n      await this.apiWalletService.createUpgrader(this.contractInstance2, this.userAccount, this.chainId).then((data) => {\n\n        if (data && data != null && data != undefined) {\n          this.uniqueAddress = data;\n          this.show = 'step2';\n        }\n      }).catch((er) => {\n      })\n    }\n\n  }\n\n  //click event  2\n  async sendSpcToVault() {\n    console.log('-------------------------',this.id)\n    if (this.id && this.id == '1') {\n      console.log('--------------------------------1--',)\n      await this.apiService.getBalance1(this.uniqueAddress, this.contractInstance1).then(async (data) => {\n        if (data && data > 0) {\n\n        } else {\n          console.log('--------------------------------2--',)\n\n          this.transfer(this.uniqueAddress, this.balance1, this.contractInstance1);\n        }\n\n      })\n    } else {\n      await this.apiWalletService.getBalance1(this.contractInstance1, this.uniqueAddress).then(async (data) => {\n        if (data && data > 0) {\n\n        } else {\n          this.transferWallet(this.uniqueAddress, this.balance1, this.contractInstance1, this.chainId);\n        }\n\n      })\n    }\n  }\n\n  // for  chrome extenstion\n  async transfer(uniqueAddress, balance1, contractInstance1) {\n    console.log('--------------------------------3-',)\n\n    await this.apiService.transfer(uniqueAddress, balance1, contractInstance1, this.userAccount).then((data) => {\n      if (data) {\n        console.log('--------------------------------5-',data)\n        this.show = 'step3';\n      }\n\n    }).catch((er) => {\n\n    })\n  }\n\n  // for mobile wallet Connect\n  async transferWallet(uniqueAddress, balance1, contractInstance1, chainId) {\n    await this.apiWalletService.transfer(uniqueAddress, balance1, contractInstance1, this.userAccount, chainId).then((data) => {\n      if (data) {\n        this.show = 'step3';\n      }\n    });\n  }\n\n  //click event 3\n  async migrateV1tokens() {\n    $('#please_wait').modal('show');\n\n    if (this.id && this.id == '1') {\n      await this.apiService.migrateV1tokens(this.contractInstance2, this.userAccount).then((data) => {\n        if (data) {\n          $('#please_wait').modal('hide');\n          this.show = 'step4';\n\n        }\n      }).catch((er) => {\n        if (er && er.code) {\n          this.toaster.error(er.message);\n          $('#please_wait').modal('hide');\n        }\n        this.toaster.error();\n      })\n    } else {\n      await this.apiWalletService.migrateV1tokens(this.contractInstance2, this.userAccount, this.chainId).then((data) => {\n        if (data && data != null && data != undefined) {\n          $('#please_wait').modal('hide');\n          this.show = 'step4';\n        }\n      }).catch((er) => {\n        if (er && er.code) {\n          this.toaster.error(er.message);\n          $('#please_wait').modal('hide');\n        }\n        this.toaster.error();\n      })\n\n    }\n\n  }\n\n}\n\n\n","<!-- <section class=\"your_account pdgn-tp-cmn\">\n    <div class=\"container main_height\">\n        <div class=\"row justify-content-center text-center\">\n            <div class=\"col-lg-12\">\n                <h4 class=\"h1_text\">Your Account</h4>\n                <div class=\"row balance_class\">\n                    <div class=\"col-md-6\">\n                        <div class=\"inner_account\">\n                            <img src=\"../../assets/images/balance.png\">\n                            <h2 class=\"h2_text\">412.570</h2>\n                            <p>SPC V1 Balance</p>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"inner_account\">\n                            <img src=\"../../assets/images/balance.png\">\n                            <h2 class=\"h2_text\">412.570</h2>\n                            <p>SPC V1 Balance</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"img_bottom\">\n        <img src=\"../../assets/images/Group2066.png\" class=\"img-fluid\">\n    </div>\n</section> -->\n\n\n\n\n<section class=\"your_account pdgn-tp-cmn\">\n    <div class=\"container padding_23\">\n        <div class=\"row justify-content-center text-center\">\n            <div class=\"col-lg-7\">\n                <h4 class=\"h1_text\">Your Account</h4>\n                <div class=\"row balance_class\">\n                    <div class=\"col-md-6\">\n                        <div class=\"inner_account\">\n                            <img src=\"../../assets/images/balance.png\">\n                            <h2 class=\"h2_text_white\">{{balance1}}</h2>\n                            <p class=\"p_text_orange\">SPC V1 Balance</p>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"inner_account\">\n                            <img src=\"../../assets/images/balance.png\">\n                            <h2 class=\"h2_text\">{{balance2}}</h2>\n                            <p class=\"p_text\">SPC V2 Balance</p>\n                        </div>\n                    </div>\n                    <div class=col-12 *ngIf=\"show && show=='step1' && balance2 <= 0\">\n                        <button class=\"Upgrader_vault mt-4\" (click)=\"createUpgrader()\">Create Upgrader Vault</button>\n                    </div>\n                    <div class=col-12 *ngIf=\"show && show=='step2' && balance2 <= 0\">\n                        <button class=\"Upgrader_vault btn-danger mt-4\" (click)=\"sendSpcToVault()\">Send SPC to\n                            Vault</button>\n                    </div>\n                    <div class=col-12 *ngIf=\"show && show=='step3' && balance2 <= 0\">\n                        <button class=\"Upgrader_vault btn-success mt-4\" (click)=\"migrateV1tokens()\">Upgrade SPC v1\n                            vault</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"img_bottom\">\n        <img src=\"../../assets/images/Group2066.png\" class=\"img-fluid\">\n    </div>\n</section>\n\n\n<div class=\"modal fade common_modal \" id=\"please_wait\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content modal_me text-center\">\n            <div class=\"modal-header justify-content-center align-items-center\">\n                <h5 class=\"modal-title-2\" id=\"exampleModalCenterTitle\">Please wait...</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-box\">\n                        Your SPC v1 token is upgrading to SPC v2 token\n                    </div>\n                </div>\n            </div>\n           \n\n        </div>\n    </div>\n</div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from '../api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiWalletConnectService } from '../api-wallet-connect.service';\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userAccount: any;\n\n  constructor(\n    private router: Router,\n    private apiWalletService: ApiWalletConnectService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private toaster: ToastrService,) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  // TODO\n  async checkConnectedWallet() {\n    this.userAccount = await this.apiService.export();\n\n    if (this.userAccount != undefined && this.userAccount && (this.userAccount.length)) {\n      this.toaster.info('Already wallet Connected');\n      this.router.navigate(['/Mywallet/1'])\n    } else {\n\n      this.apiWalletService.getBehaviorView().subscribe((data) => {\n        if (data && data != undefined) {\n          if (data['connected']) {\n          this.userAccount =  data['walletAddress']\n          this.router.navigate(['/Mywallet/2'])\n\n          }else{\n              $('#wallet_provider').modal({\n                backdrop: 'static',\n                keyboard: false,\n                show: true\n              });\n          }\n        }\n        else{\n          $('#wallet_provider').modal({\n            backdrop: 'static',\n            keyboard: false,\n            show: true\n          });\n        }\n      })\n      \n    }\n  }\n}\n","<section class=\"spc_token pdgn-tp-cmn\">\n  <div class=\"container\">\n      <div class=\"row align-items-center inner_spc\">\n          <div class=\"col-md-6\">\n              <div class=\"left_spc_info\">\n                  <h1>What is SPC token?</h1>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                 <div class=\"text-center\"><a href=\"javascript:void(0);\" class=\"join_space\" (click)=\"checkConnectedWallet()\">Join Spacechain</a></div>\n              </div>\n          </div>\n          <div class=\"col-md-6 text-md-right\">\n              <div class=\"right_spc_info\">\n                  <img src=\"../../assets/images/spc_token.png\" class=\"img-fluid\">\n              </div>\n          </div>\n      </div>\n  </div>\n  <div class=\"img_bottom\">\n      <img src=\"../../assets/images/bottom_blue.png\" class=\"img-fluid\">\n  </div>\n</section>\n<section class=\"how_it_work\">\n  <div class=\"container\">\n      <h2 class=\"common-title text-center\">How it works</h2>\n      <div class=\"row pdng-tp-90\">\n          <div class=\"col-md-7\">\n              <div class=\"conect_walet\">\n                  <img src=\"../../assets/images/icon_wallet.png\">\n                  <h3><span>01.</span> Connect Wallet</h3>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </div>\n              <div class=\"conect_walet\">\n                  <img src=\"../../assets/images/icon_wallet.png\">\n                  <h3><span>02.</span> Send SPC to Vault</h3>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </div>\n              <div class=\"conect_walet\">\n                  <img src=\"../../assets/images/icon_wallet.png\">\n                  <h3><span>03.</span>Upgrade SPC v1 tokens</h3>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </div>\n          </div>\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-4\">\n              <div class=\"need_help\">\n                  <h4>Need more info?</h4>\n                  <p>Read the Frequently Asked Questions</p>\n                  <div class=\"text-center\"><a href=\"javascript:void(0);\" class=\"join_space\"  (click)=\"checkConnectedWallet()\" >Join Spacechain</a></div>\n              </div>\n          </div>\n      </div>\n  </div>\n</section>\n\n","export const environment = {\n  production: false,\n\n  main: 'Ethereum Main',\n  rops: 'Ropsten',\n  rinkeby: 'Rinkeby',\n  Goerli: 'Goerli',\n  Kovan: 'Kovan',\n\n\n  divideValue: 1000000000000000000,\n\n  ABI1: [\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"INITIAL_SUPPLY\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"burner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Burn\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    }\n  ],\n\n  ABI2: [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"burnFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"createUpgrader\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"subtractedValue\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"decreaseAllowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"addedValue\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"increaseAllowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrateV1tokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"tokenUpgrader\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract TokenUpgrader\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"recipient\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"recipient\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ],\n\n  contractAddress1: '0x9e5687B0E65a52A53C02fE101e232Ed43A25f391',\n\n  contractAddress2: '0xaC1A1565E11d4DBB70C4Ec7049823d9a97683561',\n\n\n};\n","import { SUPPORTED_CHAINS } from \"./chains\";\nimport { IChainData } from \"./types\";\n\nexport function getChainData(chainId: number): IChainData {\n    const chainData = SUPPORTED_CHAINS.filter((chain: any) => chain.chain_id === chainId)[0];\n\n    if (!chainData) {\n      throw new Error(\"ChainId missing or not supported\");\n    }\n\n    const API_KEY = \"ANGULAR_APP_INFURA_PROJECT_ID\";\n\n    if (\n      chainData.rpc_url.includes(\"infura.io\") &&\n      chainData.rpc_url.includes(\"%API_KEY%\") &&\n      API_KEY\n    ) {\n      const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\n\n      return {\n        ...chainData,\n        rpc_url: rpcUrl,\n      };\n    }\n\n    return chainData;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n","import BigNumber from \"../../assets/bignumber.js\";\n\nexport function convertStringToHex(value: string | number): string {\n  return new BigNumber(`${value}`).toString(16);\n}\n\nexport function convertAmountToRawNumber(value: string | number, decimals = 18): string {\n  return new BigNumber(`${value}`).times(new BigNumber(\"10\").pow(decimals)).toString();\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from '../../api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiWalletConnectService } from 'src/app/api-wallet-connect.service';\n\ndeclare let window: any;\ndeclare const $: any;\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  login: Boolean = false;\n  networkName: any = '';\n  userAccount: any;\n  walletAddress: any = '';\n\n\n  wallet: any = '';\n  id: any;\n\n  constructor(\n    private router: Router,\n    private _route: ActivatedRoute,\n    private apiService: ApiService,\n    private apiWalletService: ApiWalletConnectService,\n    private toaster: ToastrService,) {\n\n    // this.id = this._route.snapshot.params['id'];\n    // if (this.id && this.id != undefined) {\n    //   let idArray = ['1', '2'];\n\n    //   if (!idArray.includes(this.id)) {\n    //     this.router.navigate(['/']);\n    //   } else {\n    //     if (this.id == 1) {\n    //       this.wallet = 'Metamask';\n    this.getConnection();\n    // }\n    // else {\n    //   this.wallet = 'WalletConnect';\n    // }\n    // }\n    // }\n\n\n  }\n\n  async ngOnInit() {\n  \n  }\n\n\n  async getConnection() {\n    this.userAccount = await this.apiService.export();\n    if (this.userAccount != undefined && this.userAccount && (this.userAccount.length)) {\n      this.login = true;\n      this.getNetworkName();\n      this.getSelectedAddress();\n    } else {\n\n      this.apiWalletService.getBehaviorView().subscribe((data) => {\n        if (data && data != undefined) {\n\n          if (data['connected'] && data['connected'] == true) {\n            this.login = true;\n            this.networkName = data['networkName'];\n            this.walletAddress = data['walletAddress'];\n          } else {\n            $('#wallet_provider').modal('hide');\n            this.login = false;\n          }\n\n        } else {\n          this.login = false;\n        }\n      })\n\n    }\n\n  }\n\n  async getNetworkName() {\n    this.networkName = await this.apiService.getNetworkName();\n  }\n\n  async getSelectedAddress() {\n    this.walletAddress = await this.apiService.getSelectedAddress();\n\n  }\n\n\n  connectToMetaMask() {\n\n    this.apiService.connect().then((data) => {\n      this.login = true;\n      this.getNetworkName();\n      this.getSelectedAddress();\n      this.toaster.success('User Connected Successfully');\n      this.router.navigate([\"/Mywallet/1\"]);\n\n    }).catch((er) => {\n\n      if (er && er.code) {\n        this.toaster.error(er.message);\n      }\n    })\n  }\n\n  connectToWalletConnect() {\n    this.apiWalletService.walletConnectInit();\n\n    this.apiWalletService.getOnConnectBehaviorView().subscribe((data) => {\n      if (data && data != undefined) {\n        if (data['connected']) {\n          $('#wallet_provider').modal('hide');\n          this.router.navigate(['/Mywallet/2'])\n        } else {\n          $('#wallet_provider').modal('hide');\n\n        }\n      }\n    })\n  }\n\n}\n","<header id=\"header\" class=\"header\">\n    <div class=\"container\">\n        <nav id=\"nav\" class=\"navbar\">\n            <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../../../assets/images/spacelogo.png\" class=\"logo\"></a>\n            <div class=\"nv_light\">\n                <!-- <button class=\"connect_btn\">Connect Wallet</button> -->\n                <div class=\"text-center\">\n                    \n                    <h3 class=\"text-white mb-0 mr-2 d-flex align-items-center\" style=\"padding-right: 15px;font-size: 21px;\" *ngIf=\"login\">\n\n                        <div>{{networkName}}<div class=\"walletAddress d-flex\"><span class=\"ellips\">{{walletAddress}}</span>\n                                <span>{{walletAddress| slice:-4}}</span></div>\n                        </div>\n                    </h3>\n\n                    <a href=\"javascript:void(0);\" *ngIf=\"!login\" class=\"connect_btn\" data-toggle=\"modal\"\n                        data-target=\"#wallet_provider\">Connect Wallet</a>\n\n                </div>\n\n            </div>\n        </nav>\n    </div>\n</header>\n\n<!-- Modal -->\n<div class=\"modal fade common_modal\" id=\"wallet_provider\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header justify-content-center align-items-center\">\n                <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Select a wallet provider</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"wallet_prov\">\n                            <div class=\"metamark_main\">\n                                <img src=\"../../assets/images/metamark.png\">\n                                <p>Metamask</p>\n                            </div>\n                            <a (click)=\"connectToMetaMask()\" data-dismiss=\"modal\"><button\n                                    class=\"wallet_connect_btn\">Connect</button></a>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"wallet_prov\">\n                            <div class=\"metamark_main\">\n                                <img src=\"../../assets/images/wallet_collect.png\">\n                                <p>Wallet connect</p>\n                            </div>\n                            <a  (click)=\"connectToWalletConnect()\"><button class=\"wallet_connect_btn\">Connect</button></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, HostListener, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'spacechain';\n  constructor(@Inject(DOCUMENT) private document: Document){}\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n      document.getElementById('header').classList.add('fixed-header');\n    }\n    else{\n      document.getElementById('header').classList.remove('fixed-header');\n    }\n  }\n}\n","<app-header></app-header>\n<div class=\"container-fluid\" (scroll)=\"onWindowScroll()\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { IChainData } from \"../helpers/types\";\n\nexport const SUPPORTED_CHAINS: IChainData[] = [\n  {\n    name: \"Mainnet\",\n    short_name: \"eth\",\n    chain: \"ETH\",\n    network: \"mainnet\",\n    chain_id: 1,\n    network_id: 1,\n    rpc_url: \"https://mainnet.infura.io/v3/%API_KEY%\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Ropsten\",\n    short_name: \"rop\",\n    chain: \"ETH\",\n    network: \"ropsten\",\n    chain_id: 3,\n    network_id: 3,\n    rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Ethereum Rinkeby\",\n    short_name: \"rin\",\n    chain: \"ETH\",\n    network: \"rinkeby\",\n    chain_id: 4,\n    network_id: 4,\n    rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Ethereum Görli\",\n    short_name: \"gor\",\n    chain: \"ETH\",\n    network: \"goerli\",\n    chain_id: 5,\n    network_id: 5,\n    rpc_url: \"https://goerli.infura.io/v3/%API_KEY%\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"RSK Mainnet\",\n    short_name: \"rsk\",\n    chain: \"RSK\",\n    network: \"mainnet\",\n    chain_id: 30,\n    network_id: 30,\n    rpc_url: \"https://public-node.rsk.co\",\n    native_currency: {\n      symbol: \"RSK\",\n      name: \"RSK\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Ethereum Kovan\",\n    short_name: \"kov\",\n    chain: \"ETH\",\n    network: \"kovan\",\n    chain_id: 42,\n    network_id: 42,\n    rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Ethereum Classic Mainnet\",\n    short_name: \"etc\",\n    chain: \"ETC\",\n    network: \"mainnet\",\n    chain_id: 61,\n    network_id: 1,\n    rpc_url: \"https://ethereumclassic.network\",\n    native_currency: {\n      symbol: \"ETH\",\n      name: \"Ether Classic\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"POA Network Sokol\",\n    short_name: \"poa\",\n    chain: \"POA\",\n    network: \"sokol\",\n    chain_id: 77,\n    network_id: 77,\n    rpc_url: \"https://sokol.poa.network\",\n    native_currency: {\n      symbol: \"POA\",\n      name: \"POA\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"POA Network Core\",\n    short_name: \"skl\",\n    chain: \"POA\",\n    network: \"core\",\n    chain_id: 99,\n    network_id: 99,\n    rpc_url: \"https://core.poa.network\",\n    native_currency: {\n      symbol: \"POA\",\n      name: \"POA\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"xDAI Chain\",\n    short_name: \"xdai\",\n    chain: \"POA\",\n    network: \"dai\",\n    chain_id: 100,\n    network_id: 100,\n    rpc_url: \"https://dai.poa.network\",\n    native_currency: {\n      symbol: \"xDAI\",\n      name: \"xDAI\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n  {\n    name: \"Callisto Mainnet\",\n    short_name: \"clo\",\n    chain: \"callisto\",\n    network: \"mainnet\",\n    chain_id: 820,\n    network_id: 1,\n    rpc_url: \"https://clo-geth.0xinfra.com/\",\n    native_currency: {\n      symbol: \"CLO\",\n      name: \"CLO\",\n      decimals: \"18\",\n      contractAddress: \"\",\n      balance: \"\",\n    },\n  },\n];\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './layouts/header/header.component';\nimport { FooterComponent } from './layouts/footer/footer.component';\nimport { MyWalletComponent } from './my-wallet/my-wallet.component';\n\n\n\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    MyWalletComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n      enableHtml: true,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n      <div class=\"row\">\n          <div class=\"col-md-8\">\n              <div class=\"d-md-flex align-items-center left-footer\">\n                  <p>© Copyright 2020 spacechain.com</p>\n                  <ul>\n                      <li><a href=\"#\">Privacy Policy</a></li>\n                      <li><a href=\"#\">Terms & Conditions</a></li>\n                  </ul>\n              </div>\n          </div>\n          <div class=\"col-md-4 text-md-right\">\n              <ul class=\"footer_icons\">\n                  <li><a href=\"#\"><img src=\"../../../assets/images/facebook.svg\"></a></li>\n                  <li><a href=\"#\"><img src=\"../../../assets/images/twitter.svg\"></a></li>\n                  <li><a href=\"#\"><img src=\"../../../assets/images/instagram.svg\"></a></li>\n              </ul>\n          </div>\n      </div>\n  </div>\n</footer>\n","import axios, { AxiosInstance } from \"axios\";\nimport { IAssetData,IGasPrices } from \"./types\";\n\n\nconst api: AxiosInstance = axios.create({\n    baseURL: \"https://ethereum-api.xyz\",\n    timeout: 30000, // 30 secs\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\nexport async function apiGetAccountAssets(address: string, chainId: number): Promise<IAssetData[]> {\n    const response = await api.get(`/account-assets?address=${address}&chainId=${chainId}`);\n    const { result } = response.data;\n    return result;\n}\n\nexport const apiGetAccountNonce = async (address: string, chainId: number): Promise<string> => {\n  const response = await api.get(`/account-nonce?address=${address}&chainId=${chainId}`);\n  const { result } = response.data;\n  return result;\n};\n\n\nexport const apiGetGasPrices = async (): Promise<IGasPrices> => {\n  const response = await api.get(`/gas-prices`);\n  const { result } = response.data;\n  return result;\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {MyWalletComponent} from \"./my-wallet/my-wallet.component\";\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component:HomeComponent\n  },\n  {\n    path:\"Mywallet/:id\",\n    component:MyWalletComponent,\n    // canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport Web3 from 'web3';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\n\nimport { getChainData, sanitizeHex } from \"./helpers/utils\";\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { apiGetAccountNonce, apiGetGasPrices } from './helpers/api';\nimport { convertAmountToRawNumber, convertStringToHex } from './helpers/bignumber';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiWalletConnectService {\n\n  private behave = new BehaviorSubject<Object>('');\n  private onConnectBehave = new BehaviorSubject<Object>('');\n\n  connector: any;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private toaster: ToastrService, private router: Router,) {\n    const that = this;\n\n\n    const provider = new WalletConnectProvider({\n      infuraId: \"5918063957ef4e8bae0348d54fa14ebb\" // Required\n    });\n\n    if (provider) {\n      if (provider.wc && provider.wc['_connected']) {\n        console.log('-----------conne', provider.wc['_chainId'])\n        const activeChain = provider.wc['_chainId'] ? getChainData(provider.wc['_chainId']).name : null;\n        this.setBehaviorView({\n          walletAddress: provider.wc['_accounts'][0],\n          networkName: activeChain,\n          connected: true,\n          chainId: provider.wc['_chainId']\n        })\n\n        provider.on(\"open\", (d) => {\n          console.log(\"open\", d);\n        });\n\n\n      } else {\n        console.log('---------not--conne')\n\n        this.setBehaviorView({\n          walletAddress: '',\n          networkName: '',\n          connected: false,\n          chainId: 0\n        })\n\n      }\n    }\n    console.log('---------------provider--------||', provider);\n\n  }\n\n  setBehaviorView(behave: object) {\n    this.behave.next(behave);\n  }\n\n  /** Get Behavior for user registraion */\n  getBehaviorView(): Observable<object> {\n    return this.behave.asObservable();\n  }\n\n  setOnConnectBehaviorView(behave: object) {\n    this.onConnectBehave.next(behave);\n  }\n\n  /** Get Behavior for user registraion */\n  getOnConnectBehaviorView(): Observable<object> {\n    return this.onConnectBehave.asObservable();\n  }\n\n  // -------------------------wallet Connect code\n  public walletConnectInit = async () => {\n    // bridge url\n    const bridge = \"https://bridge.walletconnect.org\";\n\n    // create new connector\n    const connector = new WalletConnect({ bridge, qrcodeModal: QRCodeModal });\n    this.connector = connector;\n    // check if already connected\n    if (!connector.connected) {\n      // create new session\n      await connector.createSession();\n    }\n\n    // this.state.web3 = new Web3(\"https://ropsten.infura.io/v3/5918063957ef4e8bae0348d54fa14ebb\");\n\n    // // subscribe to events\n    await this.subscribeToEvents();\n  }\n\n\n  public subscribeToEvents = () => {\n    \n    if (!this.connector) {\n      return;\n    }\n\n    this.connector.on(\"session_update\", async (error, payload) => {\n      console.log(`connector.on(\"session_update\")`, payload);\n      if (error) {\n        throw error;\n      }\n    });\n\n    this.connector.on(\"connect\", (error, payload) => {\n\n      const activeChain = this.connector.chainId ? getChainData(this.connector.chainId).name : null;\n      const address = this.connector.accounts[0];\n\n      if (error) {\n        throw error;\n      }\n      this.setBehaviorView({\n        walletAddress: address,\n        networkName: activeChain,\n        connected: true,\n        chainId: this.connector.chainId\n      })\n\n      this.setOnConnectBehaviorView({\n        connected: true\n      })\n\n      // this.onConnect(payload);\n    });\n\n    this.connector.on(\"disconnect\", (error, payload) => {\n      console.log(`connector.on(\"disconnect\")`, payload);\n      this.killSession();\n      if (error) {\n        throw error;\n      }\n      this.setBehaviorView({\n        walletAddress: '',\n        networkName: '',\n        connected: false,\n        chainId: 0\n      })\n    });\n\n    this.connector = this.connector;\n  };\n\n\n\n  async exportInstance1(networkName) {\n    console.log('----------------------',networkName)\n    let web3;\n    if (networkName == 'Ropsten') {\n      web3 = new Web3(\"https://ropsten.infura.io/v3/5918063957ef4e8bae0348d54fa14ebb\");\n    } else if (networkName == 'Mainnet') {\n      web3 = new Web3(\"https://mainnet.infura.io/v3/5918063957ef4e8bae0348d54fa14ebb\");\n    }\n    return await new web3.eth.Contract(environment.ABI1, environment.contractAddress1);\n  }\n\n  async exportInstance2(networkName) {\n    let web3;\n    if (networkName == 'Ropsten') {\n      web3 = new Web3(\"https://ropsten.infura.io/v3/5918063957ef4e8bae0348d54fa14ebb\");\n    } else if (networkName == 'Mainnet') {\n      web3 = new Web3(\"https://mainnet.infura.io/v3/5918063957ef4e8bae0348d54fa14ebb\");\n    }\n    return await new web3.eth.Contract(environment.ABI2, environment.contractAddress2);\n  }\n\n  public getBalance1 = async (contractInstance, walletAddress) => {\n    let temp = await contractInstance.methods.balanceOf(walletAddress).call({\n      from: walletAddress\n    });\n    return await (temp / environment.divideValue);\n    ;\n  }\n\n  public getBalance2 = async (contractInstance, walletAddress) => {\n    let temp = await contractInstance.methods.balanceOf(walletAddress).call({\n      from: walletAddress\n    });\n    return await (temp / environment.divideValue);\n  }\n\n\n  async tokenUpgrader(walletAddress, contractInstance2) {\n\n    let uniqueAddress = await contractInstance2.methods.tokenUpgrader(walletAddress).call({\n      from: walletAddress\n    });\n    if (uniqueAddress) {\n      return uniqueAddress;\n    } else {\n      return 'err';\n    }\n  }\n\n\n  async createUpgrader(contractInstance2, walletAdder, chainId) {\n\n\n    const from = walletAdder;\n    const to = environment.contractAddress2;\n    const _nonce = await apiGetAccountNonce(walletAdder, chainId);\n    const nonce = sanitizeHex(convertStringToHex(_nonce));\n    const gasPrices = await apiGetGasPrices();\n    const _gasPrice = 100;\n    const gasPrice = sanitizeHex(convertStringToHex(convertAmountToRawNumber(_gasPrice, 9)));\n    const _gasLimit = 30000;\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\n    const _value = 0;\n    const value = sanitizeHex(convertStringToHex(_value));\n\n    await this.walletConnectInit();\n    let uniqueAddress = await contractInstance2.methods.createUpgrader().encodeABI();\n    if (uniqueAddress) {\n\n      // return uniqueAddress;\n      let txnObject = {\n        from: from,\n        to: to,\n        // gasPrice: gasPrice,\n        // gas: gasLimit,\n        // value: \"0x0\",\n        // nonce: nonce,\n        data: await uniqueAddress\n      };\n      console.log('-------uniqueAddress------', uniqueAddress)\n\n      console.log('-------------', txnObject)\n\n      // Send transaction\n      if (this.connector) {\n        return this.connector.sendTransaction(txnObject)\n          .then((result) => {\n            // Returns transaction id (hash)\n            return result;\n          })\n          .catch((error) => {\n            // Error returned when rejected\n            return ;\n          });\n      } else {\n        console.log('-------------else')\n      }\n\n    } else {\n      return 'err';\n    }\n  }\n\n\n  async transfer(uniqueAddress, balance, contractInstance1, walletAdder, chainId) {\n\n    const from = walletAdder;\n    const to = environment.contractAddress1;\n    const _nonce = await apiGetAccountNonce(walletAdder, chainId);\n    const nonce = sanitizeHex(convertStringToHex(_nonce));\n    const gasPrices = await apiGetGasPrices();\n    const _gasPrice = gasPrices.slow.price;\n    const gasPrice = sanitizeHex(convertStringToHex(convertAmountToRawNumber(_gasPrice, 9)));\n    const _gasLimit = 300000;\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\n\n    await this.walletConnectInit();\n\n    //--------------------\n    balance = convertAmountToRawNumber(balance);\n\n    let receipt = await contractInstance1.methods.transfer(uniqueAddress, balance).encodeABI();\n\n    if (receipt) {\n\n      let txnObject = {\n        from: from,\n        to: to,\n        gasPrice: gasPrice,\n        gas: gasLimit,\n        nonce: nonce,\n        data: await receipt\n      };\n\n      if (this.connector) {\n        return this.connector.sendTransaction(txnObject)\n          .then((result) => {\n            // Returns transaction id (hash)\n            return result;\n          })\n          .catch((error) => {\n            // Error returned when rejected\n            return ;\n          });\n      } else {\n        console.log('-------------else')\n      }\n\n    } else {\n      return 'err';\n    }\n\n  }\n\n\n  async migrateV1tokens(contractInstance2, walletAdder, chainId) {\n\n    const from = walletAdder;\n    const to = environment.contractAddress2;\n    const _nonce = await apiGetAccountNonce(walletAdder, chainId);\n    const nonce = sanitizeHex(convertStringToHex(_nonce));\n    const gasPrices = await apiGetGasPrices();\n    const _gasPrice = 21;\n    const gasPrice = sanitizeHex(convertStringToHex(convertAmountToRawNumber(_gasPrice, 9)));\n    const _gasLimit = 30000;\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\n    // const _value = 0;\n    // const value = sanitizeHex(convertStringToHex(_value));\n\n    await this.walletConnectInit();\n\n\n    let receipt = await contractInstance2.methods.migrateV1tokens().encodeABI();\n\n    if (receipt) {\n      let txnObject = {\n        from: from,\n        to: to,\n        // gasPrice: gasPrice,\n        // gas: gasLimit,\n        // value: \"0x0\",\n        // nonce: nonce,\n        data: await receipt\n      };\n\n      // return await receipt;\n\n      return this.connector.sendTransaction(txnObject)\n      .then((result) => {\n        console.log('-------------if', result)\n        // Returns transaction id (hash)\n        return result;\n      }).catch((error) => {\n        // Error returned when rejected\n        console.log('-------------if', error)\n        return error;\n      });\n\n    } else {\n      return 'err';\n    }\n\n\n  }\n\n\n  public killSession = async () => {\n      if (this.connector) {\n        this.connector.killSession();\n        this.connector = '';\n    }\n    this.router.navigateByUrl(\"/\");\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport Web3 from 'web3';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\n\nimport { getChainData, sanitizeHex } from \"./helpers/utils\";\nimport { convertAmountToRawNumber } from './helpers/bignumber';\n\ndeclare let window: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  connector: any;\n  constructor(private route: ActivatedRoute, private http: HttpClient, private toaster: ToastrService, private router: Router,) {\n    const that = this;\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.web3.currentProvider);\n\n      window.ethereum.autoRefreshOnNetworkChange = true;\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      // commented for future use\n\n    }\n\n  }\n\n  getNetworkName() {\n    if (window.ethereum && window.ethereum.chainId) {\n      if (window.ethereum.chainId == \"0x1\") {\n        return environment.main;\n      }\n      if (window.ethereum.chainId == \"0x3\") {\n        return environment.rops;\n      }\n      if (window.ethereum.chainId == \"0x4\") {\n        return environment.rinkeby;\n      }\n      if (window.ethereum.chainId == \"0x5\") {\n        return environment.Goerli;\n      }\n      if (window.ethereum.chainId == \"0x2a\") {\n        return environment.Kovan;\n      }\n    }\n  }\n\n  connect() {\n    if (window.ethereum) {\n      // commented for future use\n      return new Promise((resolve, reject) => {\n\n        let temp = window.ethereum.enable();\n        if (temp) {\n          resolve(temp)\n        } else {\n          reject('err');\n        }\n\n      })\n    }\n  }\n\n\n  async exportInstance1() {\n    return await new window.web3.eth.Contract(environment.ABI1, environment.contractAddress1);\n  }\n\n  async exportInstance2() {\n    return await new window.web3.eth.Contract(environment.ABI2, environment.contractAddress2);\n  }\n\n\n  async export() {\n\n    return new Promise((resolve, reject) => {\n      window.web3.eth.getAccounts((error, result) => {\n\n        // just 1 min jo\n        if (error != null) {\n          alert(\"Error retrieving accounts.\");\n          resolve([]);\n        }\n        if (result == undefined || result.length == 0) {\n          // alert(\"No account found! Make sure the Ethereum client is configured properly.\");\n          resolve([]);\n        } else {\n\n          let account = result[0];\n          window.web3.eth.defaultAccount = account;\n          resolve(account)\n        }\n      })\n    })\n  }\n\n  getSelectedAddress() {\n    if (window.ethereum && window.ethereum.selectedAddress) {\n      return window.ethereum.selectedAddress;\n    }\n  }\n\n\n  getBalance1(userWalletAccount, contractInstance) {\n    return new Promise(async (resolve, reject) => {\n      if (!userWalletAccount) {\n        console.log('Metamask/Wallet connection failed.');\n        this.toaster.error('Metamask/Wallet connection failed.');\n        return;\n      }\n      let temp = await contractInstance.methods.balanceOf(userWalletAccount).call({\n        from: userWalletAccount\n      });\n      if (temp) {\n        resolve(temp / environment.divideValue);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n    });\n\n  }\n\n  getBalance2(userWalletAccount, contractInstance) {\n    return new Promise(async (resolve, reject) => {\n      if (!userWalletAccount) {\n        this.toaster.error('Metamask/Wallet connection failed.');\n        return;\n      }\n\n      let temp = await contractInstance.methods.balanceOf(userWalletAccount).call({\n        from: userWalletAccount\n      });\n      if (temp) {\n        resolve(temp / environment.divideValue);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n\n    });\n\n  }\n\n\n  tokenUpgrader(userWalletAccount, contractInstance2) {\n    return new Promise(async (resolve, reject) => {\n      if (!userWalletAccount) {\n        console.log('Metamask/Wallet connection failed.');\n        this.toaster.error('Metamask/Wallet connection failed.');\n        return;\n      }\n      let uniqueAddress = await contractInstance2.methods.tokenUpgrader(userWalletAccount).call({\n        from: userWalletAccount\n      });\n      if (uniqueAddress) {\n        resolve(uniqueAddress);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n\n    });\n\n  }\n\n\n  createUpgrader(contractInstance2, walletAdder) {\n    return new Promise(async (resolve, reject) => {\n\n      let uniqueAddress = await contractInstance2.methods.createUpgrader().send({\n        from: walletAdder\n      });\n      if (uniqueAddress) {\n        resolve(uniqueAddress);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n    })\n  }\n\n\n  transfer(uniqueAddress, balance, contractInstance1, walletAdder) {\n    return new Promise(async (resolve, reject) => {\n      balance = await convertAmountToRawNumber(balance);\n      console.log('--------------------------------3-',balance)\n\n      let receipt = await contractInstance1.methods.transfer(uniqueAddress, balance).send({\n        from: walletAdder\n      });\n\n      if (receipt) {\n        resolve(receipt);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n\n    })\n  }\n\n\n  migrateV1tokens(contractInstance2, walletAdder) {\n\n    return new Promise(async (resolve, reject) => {\n\n      let receipt = await contractInstance2.methods.migrateV1tokens().send({\n        from: walletAdder\n      });\n\n      if (receipt) {\n        resolve(receipt);\n      } else {\n        console.log('Please connect with metamask');\n        reject('err');\n      }\n\n    })\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}